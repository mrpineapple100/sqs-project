name: Spring Boot & React CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint docker-compose.yml
        run: docker compose -f docker-compose.yml config

  Backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: pokesearch
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
        ports:
          - 5439:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL..."
          until pg_isready -h localhost -p 5439; do sleep 1; done
          echo "PostgreSQL is ready."

      - name: Create dummy root user in Postgres
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          PGPASSWORD=user psql -h localhost -p 5439 -U user -d pokesearch -c "CREATE ROLE root WITH LOGIN;"

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew
        working-directory: backend

      - name: Build Backend with Gradle
        run: ./gradlew build
        working-directory: backend

      - name: Run Backend Tests
        run: ./gradlew test
        working-directory: backend
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5439/pokesearch
          SPRING_DATASOURCE_USERNAME: user
          SPRING_DATASOURCE_PASSWORD: user

      - name: Run SonarCloud Analysis (Backend)
        working-directory: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: 7293ca892fb3a1a3b2673297d1db7670cc1bf925
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=mrpineapple100_sqs-backend \
            -Dsonar.organization=mrpineapple100 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=7293ca892fb3a1a3b2673297d1db7670cc1bf925

  Frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build Frontend
        working-directory: frontend
        run: npm run build

      - name: Run SonarCloud Analysis (Frontend)
        working-directory: frontend
        env:
          SONAR_TOKEN: 288a7437271773fc28e6a390d9c46d3224ae6752
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=mrpineapple100_sqs-frontend \
            -Dsonar.organization=mrpineapple100 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=288a7437271773fc28e6a390d9c46d3224ae6752
